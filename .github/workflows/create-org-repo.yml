# This is a basic workflow to help you get started with Actions

name: Create Org Repo

# Controls when the workflow will run
on:
  # Allows you to reuse this workflow from other workflows
  workflow_call:
    inputs:
      username:
        description: 'A username passed from the caller workflow'
        required: true
        type: string  # Can be: [boolean,number,string]
      org:
        description: 'Org to create the repo in'
        required: true
        type: string
      repo-name:
        description: 'Name of the repo to create'
        required: true
        type: string
    secrets:
      caller-token:
        description: 'A token passed from the caller workflow'
        required: true
        
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      username:
        description: 'A username passed from the caller workflow'
        required: true
      org:
        description: 'Org to create the repo in'
        required: true
      repo-name:
        description: 'Name of the repo to create'
        required: true
        

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Show that the token passed from the caller was captured
      - name: Validate Caller Secret
        run: |
          echo "GitHub secret: [${{ secrets.caller-token }}]";
          echo "Env secret: [${CALLER_TOKEN}]";
          echo "Env secret (exposed): [${CALLER_TOKEN:0:1}:${CALLER_TOKEN:1:${#CALLER_TOKEN}}]";
        env:
          CALLER_TOKEN: ${{ secrets.caller-token }}
      
      - name: GitHub API - Create Org Repo
        uses: actions/github-script@v5.0.0
        with:
          # https://octokit.github.io/rest.js/v18#repos-create-in-org
          # visibility: "internal", team: "team-a"
          script: |
            github.rest.repos.createInOrg({
              org: "${{ github.event.inputs.org }}",
              name: "${{ github.event.inputs.repo-name }}",
              description: "Description of ${{ github.event.inputs.repo-name }} auto-generated repo"
            });
          # The GitHub token used to create an authenticated client
          github-token: ${{ secrets.ORG_TOKEN }}
          # Whether to tell the GitHub client to log details of its requests
          debug: true
          # An optional user-agent string
#           user-agent: # optional, default is actions/github-script
          # A comma-separated list of API previews to accept
#           previews: # optional
          # Either "string" or "json" (default "json")â€”how the result will be encoded
#           result-encoding: # optional, default is json
